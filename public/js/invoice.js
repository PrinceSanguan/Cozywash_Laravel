//Hamburger
function toggleMenu() {
    const menu = document.querySelector(".menu");
    if (menu.style.left === "-250px") {
        menu.style.left = "0";
    } else {
        menu.style.left = "-250px";
    }
}

//Generate Receipt Number
function generateReceiptNumber() {
    // Generate a random 8-digit number
    return Math.floor(10000000 + Math.random() * 90000000);
}

// invoice with autogenerated receipt number
function populateReceiptNumber() {
    const receiptNumber = generateReceiptNumber();
    document.getElementById("receiptNumber").textContent = receiptNumber;
}

// Call the function to populate receipt number when the page loads
populateReceiptNumber();
//LAST RECEIPT GENERATED
// Function to get the last receipt number used from storage or initialize it if it doesn't exist
function getLastReceiptNumber() {
    // You can use localStorage or sessionStorage to store the last receipt number
    // Here, I'm using localStorage
    let lastReceiptNumber = localStorage.getItem("lastReceiptNumber");
    if (!lastReceiptNumber) {
        lastReceiptNumber = 1000; // Initialize with a starting number
    }
    return parseInt(lastReceiptNumber);
}

// Function to generate a new receipt number and update the last receipt number used
function generateReceiptNumber() {
    let lastReceiptNumber = getLastReceiptNumber();
    const newReceiptNumber = lastReceiptNumber + 1;
    // Update the last receipt number in storage
    localStorage.setItem("lastReceiptNumber", newReceiptNumber);
    return newReceiptNumber;
}

// Function to populate invoice with generated receipt number
function populateReceiptNumber() {
    const receiptNumber = generateReceiptNumber();
    document.getElementById("receiptNumber").textContent = receiptNumber;
}

// Call the function to populate receipt number when the page loads
populateReceiptNumber();

// Sample customer data with loyalty points (you can replace this with actual data fetched from your backend)
const customers = [
    { name: "John Doe", loyaltyPoints: 100 },
    { name: "Jane Smith", loyaltyPoints: 200 },
    // Add more customer data as needed
];

// Reedem Voucher
function redeemVoucher() {
    const voucherCode = document.getElementById("voucherCode").value.trim();
    const customerName = document.getElementById("customerSearch").value.trim();
    const customer = customers.find((c) => c.name === customerName);

    if (!customer) {
        alert("Customer not found.");
        return;
    }

    if (voucherCode === "FREE_SERVICE" && customer.loyaltyPoints >= 150) {
        alert("Voucher redeemed successfully. Enjoy your free service!");
        // Add logic to apply free service to the invoice
    } else {
        alert(
            "Voucher cannot be redeemed. Either the code is invalid or you don't have enough loyalty points."
        );
    }
}

// Event listener for redeem button click
document
    .getElementById("redeemButton")
    .addEventListener("click", redeemVoucher);

//Select
function updateShippingOptions() {
    const serviceType = serviceTypeSelect.value;
    // Enable or disable delivery option based on service type
    if (serviceType === "full") {
        shippingOptionSelect.querySelector(
            'option[value="delivery"]'
        ).disabled = false;
    } else {
        shippingOptionSelect.value = "selfPickup";
        shippingOptionSelect.querySelector(
            'option[value="delivery"]'
        ).disabled = true;
    }
}
